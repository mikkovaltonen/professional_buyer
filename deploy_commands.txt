# Google Cloud Run deployment with environment variables

# 1. Export environment variables first (no Firebase user/password needed)
export OPENAI_API_KEY="your_openai_api_key_here"
export VECTOR_STORE_ID="your_vector_store_id_here"
export SECRET_KEY="your_secret_key_here"
export FIREBASE_API_KEY="your_firebase_api_key"
export FIREBASE_AUTH_DOMAIN="your_project.firebaseapp.com"
export FIREBASE_PROJECT_ID="your_project_id"
export FIREBASE_STORAGE_BUCKET="your_project.appspot.com"
export FIREBASE_MESSAGING_SENDER_ID="your_sender_id"
export FIREBASE_APP_ID="your_app_id"
export FIREBASE_MEASUREMENT_ID="your_measurement_id"

# 2. Deploy with environment variables (Firebase user/pw are hardcoded in app)
gcloud run deploy professional-buyer \
  --source . \
  --region europe-north1 \
  --platform managed \
  --allow-unauthenticated \
  --memory 512Mi \
  --cpu 1000m \
  --timeout 300s \
  --max-instances 40 \
  --concurrency 80 \
  --set-env-vars OPENAI_API_KEY="$OPENAI_API_KEY",SECRET_KEY="$SECRET_KEY",VECTOR_STORE_ID="$VECTOR_STORE_ID",FIREBASE_API_KEY="$FIREBASE_API_KEY",FIREBASE_AUTH_DOMAIN="$FIREBASE_AUTH_DOMAIN",FIREBASE_PROJECT_ID="$FIREBASE_PROJECT_ID",FIREBASE_STORAGE_BUCKET="$FIREBASE_STORAGE_BUCKET",FIREBASE_MESSAGING_SENDER_ID="$FIREBASE_MESSAGING_SENDER_ID",FIREBASE_APP_ID="$FIREBASE_APP_ID",FIREBASE_MEASUREMENT_ID="$FIREBASE_MEASUREMENT_ID"

# 3. Alternative: Update existing service with new environment variables
gcloud run services update professional-buyer \
  --region europe-north1 \
  --update-env-vars FIREBASE_API_KEY="$FIREBASE_API_KEY",FIREBASE_AUTH_DOMAIN="$FIREBASE_AUTH_DOMAIN",FIREBASE_PROJECT_ID="$FIREBASE_PROJECT_ID",FIREBASE_STORAGE_BUCKET="$FIREBASE_STORAGE_BUCKET",FIREBASE_MESSAGING_SENDER_ID="$FIREBASE_MESSAGING_SENDER_ID",FIREBASE_APP_ID="$FIREBASE_APP_ID",FIREBASE_MEASUREMENT_ID="$FIREBASE_MEASUREMENT_ID"

# 4. Check current environment variables
gcloud run services describe professional-buyer --region europe-north1 --format="value(spec.template.spec.template.spec.containers[0].env[].name,spec.template.spec.template.spec.containers[0].env[].value)"

# 5. View logs to debug issues
gcloud logs read --filter="resource.type=cloud_run_revision AND resource.labels.service_name=professional-buyer" --limit=50

# 6. Create Firebase user (IMPORTANT!)
# You MUST create this user in Firebase Console first:
# 1. Go to Firebase Console > Authentication > Users
# 2. Add user: admin@professionalbuyer.com
# 3. Password: password123
# 4. Make sure the user has appropriate Firestore permissions

# 7. Set Firestore Security Rules to allow authenticated users:
# rules_version = '2';
# service cloud.firestore {
#   match /databases/{database}/documents {
#     match /{document=**} {
#       allow read, write: if request.auth != null;
#     }
#   }
# }